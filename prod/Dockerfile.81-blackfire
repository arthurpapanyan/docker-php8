FROM php:8.1.7-fpm-alpine3.16
WORKDIR /var/www/html
# Install composer
ENV COMPOSER_HOME /composer
ENV PATH ./vendor/bin:/composer/vendor/bin:$PATH
ENV COMPOSER_ALLOW_SUPERUSER 1
RUN curl -s https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin/ --filename=composer
# Install required libs for extension builds
RUN apk add --no-cache \
    --repository http://dl-cdn.alpinelinux.org/alpine/edge/main \
    --repository http://dl-cdn.alpinelinux.org/alpine/edge/community \
    openrc \
    curl \
    g++ \
    gcc \
    make \
    pkgconfig \
    imagemagick \
    imagemagick-dev \
    zlib \
    zlib-dev \
    libpng \
    libpng-dev \
    libwebp-dev \
    libjpeg \
    freetype-dev \
    libjpeg-turbo-dev \
    libcurl \
    curl-dev \
    libzip-dev \
    libxml2-dev \
    libxpm-dev \
    autoconf \
    git \
    icu-dev \
    bash \
    php8-pcntl \
    shadow \
    xdg-utils \
    openssl-dev

# Clone and compile librdkafa for php extension
RUN git clone https://github.com/edenhill/librdkafka.git && cd librdkafka && ./configure && make && make install && rm -rf librdkafka
RUN pecl install \
    imagick \
    redis \
    rdkafka
RUN docker-php-ext-enable \
    imagick \
    redis \
    rdkafka
RUN docker-php-ext-configure intl
RUN docker-php-ext-configure gd \
        --enable-gd \
        --with-webp \
        --with-jpeg \
        --with-xpm \
        --with-freetype
RUN docker-php-ext-install \
    intl \
    bcmath \
    calendar \
    curl \
    exif \
    gd \
    zip \
    pdo_mysql \
    soap \
    mysqli \
    xml \
    pcntl
## Installing ffmpeg and ffprobe
RUN wget https://johnvansickle.com/ffmpeg/builds/ffmpeg-git-amd64-static.tar.xz
RUN tar -xvf ffmpeg-git-amd64-static.tar.xz
RUN mv ffmpeg-git-*-amd64-static /usr/local/bin/ffmpeg
RUN rm -f ffmpeg-git-amd64-static.tar.xz
RUN version=$(php -r "echo PHP_MAJOR_VERSION.PHP_MINOR_VERSION;") \
    && architecture=$(uname -m) \
    && curl -A "Docker" -o /tmp/blackfire-probe.tar.gz -D - -L -s https://blackfire.io/api/v1/releases/probe/php/alpine/$architecture/$version \
    && mkdir -p /tmp/blackfire \
    && tar zxpf /tmp/blackfire-probe.tar.gz -C /tmp/blackfire \
    && mv /tmp/blackfire/blackfire-*.so $(php -r "echo ini_get ('extension_dir');")/blackfire.so \
    && printf "extension=blackfire.so\nblackfire.agent_socket=tcp://172.16.10.99:8307\n" > $PHP_INI_DIR/conf.d/blackfire.ini \
    && rm -rf /tmp/blackfire /tmp/blackfire-probe.tar.gz
RUN echo 'memory_limit = 3G' >> /usr/local/etc/php/conf.d/docker-php-memlimit.ini
# Creating Webserver User directories
RUN mkdir -p /home/www-data && mkdir -p /var/www/html && chown -R www-data:www-data /var/www /home/www-data
RUN usermod -u 1002 xfs
RUN groupmod -g 1002 xfs
RUN groupmod -g 33 www-data
RUN usermod -u 33 www-data